
## 8 weeks sql challenge
## Case Study 1 - Danny's Dinner

-- Questions and Solutions
USE sql_case_studies;   

-- 1. What is the total amount each customer spent at the restaurant?
SELECT customer_id, 
	   SUM(price) AS total_spent_by_each_customer
FROM sales s 
INNER JOIN 
menu m
ON s.product_id = m.product_id
GROUP BY customer_id;

-- 2. How many days has each customer visited the restaurant?
SELECT customer_id, 
	   COUNT(*) as no_of_days 
FROM sales
GROUP BY customer_id;

-- 3. What was the first item from the menu purchased by each customer?
SELECT * 
FROM
	(SELECT customer_id, order_date, product_name,
	ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY order_date ASC) as order_item_number
	FROM sales s 
    INNER JOIN 
    menu m
	ON s.product_id = m.product_id) tmp
WHERE order_item_number = 1;

-- 4. What is the most purchased item on the menu and how many times was it purchased by 
--    all customers?
SELECT product_name, 
	   COUNT(order_date) AS total_orders_each_item
FROM sales s 
INNER JOIN 
menu m
ON s.product_id = m.product_id
GROUP BY product_name
ORDER BY total_orders_each_item DESC 
LIMIT 1;

-- 5. Which item was the most popular for each customer?
SELECT *
FROM 
	(SELECT s.customer_id, product_name, COUNT(order_date) AS total_orders_each_item,
	RANK() OVER(PARTITION BY customer_id ORDER BY COUNT(order_date) DESC) AS most_popular_item
	FROM sales s 
    INNER JOIN 
    menu m
	ON s.product_id = m.product_id
	GROUP BY s.customer_id, product_name) tmp
WHERE most_popular_item = 1;

-- 6. Which item was purchased first by the customer after they became a member?
SELECT * 
FROM
	 (SELECT s.customer_id, s.order_date, join_date, product_name,
	 ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY order_date) AS cust_first_purchase
	 FROM sales s 
     INNER JOIN 
     members m
	 on s.order_date >= m.join_date and m.customer_id = s.customer_id
	 INNER JOIN 
     menu m2 
	 on m2.product_id = s.product_id) tmp
 WHERE cust_first_purchase = 1;

-- 7. Which item was purchased just before the customer became a member?
SELECT * 
FROM
	 (SELECT s.customer_id, s.order_date, join_date, product_name,
	 ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY order_date) AS cust_first_purchase
	 FROM sales s 
     INNER JOIN 
     members m
	 on s.order_date < m.join_date and m.customer_id = s.customer_id
	 INNER JOIN 
     menu m2 
	 on m2.product_id = s.product_id) tmp
 WHERE cust_first_purchase = 1;


-- 8. What is the total items and amount spent for each member before they became a member?
SELECT s.customer_id, 
	   COUNT(m2.product_id) AS total_items_per_member, 
       SUM(price) AS amount_spent_by_each_member
FROM sales s 
INNER JOIN 
members m1
ON s.order_date < m1.join_date
INNER JOIN
menu m2
ON s.product_id = m2.product_id
GROUP BY customer_id;

-- 9. If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how 
-- 	  many points would each customer have?
SELECT customer_id, 
	   SUM(CASE WHEN product_name = "sushi" THEN price*20 ELSE price*10 END) AS points
FROM sales s 
INNER JOIN 
menu m
ON s.product_id = m.product_id
GROUP BY customer_id;

-- 10. In the first week after a customer joins the program (including their join date) 
--     they earn 2x points on all items, not just sushi - how many points do customer A 
--     and B have at the end of January?
SELECT s.customer_id, 
	SUM(CASE 
	WHEN order_date = join_date and order_date < date_add(join_date, INTERVAL 1 WEEK) THEN price*20 
    ELSE price*0 END) AS points
FROM sales s
INNER JOIN
members m1
ON m1.join_date >= s.order_date and s.customer_id = m1.customer_id
INNER JOIN
menu m2
ON s.product_id = m2.product_id
GROUP BY s.customer_id
ORDER BY s.customer_id;

